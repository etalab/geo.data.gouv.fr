version: 2

defaults:
  workspace_root: &workspace_root
    ~/geodatagouv

  container: &default_container
    working_directory: *workspace_root
    docker:
      - image: circleci/node:8

  filters: &default_filters
    tags:
      only: '/v[0-9]+(\.[0-9]+)*/'

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  restore_node_modules: &restore_node_modules
    restore_cache:
      name: Restore node_modules cache
      keys:
        - v1-geodatagouv-node-{{ checksum "yarn.lock" }}
        - v1-geodatagouv-node-

jobs:
  install:
    <<: *default_container
    steps:
      - checkout

      - restore_cache:
          name: Restore yarn cache
          keys:
            - v1-geodatagouv-yarn-{{ checksum "yarn.lock" }}
            - v1-geodatagouv-yarn-

      - *restore_node_modules

      - run:
          name: Install dependencies
          command: yarn

      - save_cache:
          name: Save yarn cache
          key: v1-geodatagouv-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn/

      - save_cache:
          name: Save node_modules cache
          key: v1-geodatagouv-node-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/
            - packages/*/node_modules

      - run:
          name: Remove node_modules to cleanup workspace
          command: rm -rf node_modules/ packages/*/node_modules

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - ./

  lint:
    <<: *default_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Lint JavaScipt
          command: yarn lerna -- run lint:scripts

      - run:
          name: Lint Stylesheets
          command: yarn lerna -- run lint:styles

  test:
    <<: *default_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - run:
          name: Run tests
          command: yarn lerna -- run test:ci

      - store_test_results:
          path: packages/*/reports/tests

      - store_artifacts:
          name: Store coverage artifacts
          path: packages/*/coverage

      - run:
          name: Upload code coverage to codecov
          command: yarn lerna -- run codecov

  build:
    <<: *default_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - restore_cache:
          name: Restore reports cache
          keys:
            - v1-geodatagouv-reports-master-

      - run:
          name: Build output bundles
          command: yarn lerna -- run build

      - save_cache:
          name: Save reports cache
          key: v1-geodatagouv-reports-{{ .Branch }}-{{ .Revision }}
          paths:
            - packages/*/reports

      - store_artifacts:
          name: Store build report artifacts
          path: packages/*/reports

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - packages/*/dist

  deploy:
    <<: *default_container
    steps:
      - *attach_workspace
      - *restore_node_modules

      - add_ssh_keys:
          fingerprints:
            - 15:6e:be:9c:af:66:a8:b4:2b:be:9a:cd:03:d4:f3:87

      - run:
          name: Setup SSH to GitHub
          command: ssh-keyscan github.com > ~/.ssh/known_hosts

      - run:
          name: Set SSH user email
          command: git config --global user.email "infra@beta.gouv.fr"

      - run:
          name: Set SSH user name
          command: git config --global user.name "CircleCI"

      - deploy:
          name: Deploy to gh-pages branch on GitHub
          command: yarn lerna -- run deploy

workflows:
  version: 2

  build_test_deploy:
    jobs:
      - install:
          filters: *default_filters

      - lint:
          requires:
            - install
          filters: *default_filters

      - test:
          requires:
            - install
          filters: *default_filters

      - build:
          requires:
            - install
          filters: *default_filters

      - deploy:
          requires:
            - lint
            - test
            - build
          filters:
            <<: *default_filters
            branches:
              ignore: '/.*/'
